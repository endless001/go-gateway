// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebook/ent/dialect/sql/schema"
	"github.com/facebook/ent/schema/field"
)

var (
	// AccessControlsColumns holds the columns for the "access_controls" table.
	AccessControlsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "service_id", Type: field.TypeInt64},
		{Name: "open_auth", Type: field.TypeInt},
		{Name: "black_list", Type: field.TypeString},
		{Name: "white_list", Type: field.TypeString},
		{Name: "white_host_name", Type: field.TypeString},
		{Name: "clientip_flow_limit", Type: field.TypeInt},
		{Name: "service_flow_limit", Type: field.TypeInt, Unique: true},
	}
	// AccessControlsTable holds the schema information for the "access_controls" table.
	AccessControlsTable = &schema.Table{
		Name:        "access_controls",
		Columns:     AccessControlsColumns,
		PrimaryKey:  []*schema.Column{AccessControlsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// GrpcRulesColumns holds the columns for the "grpc_rules" table.
	GrpcRulesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "service_id", Type: field.TypeInt64},
		{Name: "port", Type: field.TypeInt},
		{Name: "header_transfor", Type: field.TypeString, Unique: true},
	}
	// GrpcRulesTable holds the schema information for the "grpc_rules" table.
	GrpcRulesTable = &schema.Table{
		Name:        "grpc_rules",
		Columns:     GrpcRulesColumns,
		PrimaryKey:  []*schema.Column{GrpcRulesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// HTTPRulesColumns holds the columns for the "http_rules" table.
	HTTPRulesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "service_id", Type: field.TypeInt64},
		{Name: "rule_type", Type: field.TypeInt},
		{Name: "rule", Type: field.TypeString},
		{Name: "need_https", Type: field.TypeInt},
		{Name: "need_websocket", Type: field.TypeInt},
		{Name: "need_strip_uri", Type: field.TypeInt},
		{Name: "url_rewrite", Type: field.TypeString},
		{Name: "header_transfor", Type: field.TypeString, Unique: true},
	}
	// HTTPRulesTable holds the schema information for the "http_rules" table.
	HTTPRulesTable = &schema.Table{
		Name:        "http_rules",
		Columns:     HTTPRulesColumns,
		PrimaryKey:  []*schema.Column{HTTPRulesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// LoadBalancesColumns holds the columns for the "load_balances" table.
	LoadBalancesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "service_id", Type: field.TypeInt64},
		{Name: "check_method", Type: field.TypeInt},
		{Name: "check_timeout", Type: field.TypeInt},
		{Name: "check_interval", Type: field.TypeInt},
		{Name: "round_type", Type: field.TypeInt},
		{Name: "ip_list", Type: field.TypeString},
		{Name: "weight_list", Type: field.TypeString},
		{Name: "forbid_list", Type: field.TypeString},
		{Name: "upstream_connect_timeout", Type: field.TypeInt},
		{Name: "upstream_header_timeout", Type: field.TypeInt},
		{Name: "upstream_idle_timeout", Type: field.TypeInt},
		{Name: "upstream_max_idle", Type: field.TypeInt, Unique: true},
	}
	// LoadBalancesTable holds the schema information for the "load_balances" table.
	LoadBalancesTable = &schema.Table{
		Name:        "load_balances",
		Columns:     LoadBalancesColumns,
		PrimaryKey:  []*schema.Column{LoadBalancesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ServiceInfosColumns holds the columns for the "service_infos" table.
	ServiceInfosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "load_type", Type: field.TypeInt},
		{Name: "service_name", Type: field.TypeString},
		{Name: "service_desc", Type: field.TypeString},
		{Name: "create_at", Type: field.TypeTime},
		{Name: "update_at", Type: field.TypeTime},
		{Name: "is_delete", Type: field.TypeInt8, Unique: true},
	}
	// ServiceInfosTable holds the schema information for the "service_infos" table.
	ServiceInfosTable = &schema.Table{
		Name:        "service_infos",
		Columns:     ServiceInfosColumns,
		PrimaryKey:  []*schema.Column{ServiceInfosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// TCPRulesColumns holds the columns for the "tcp_rules" table.
	TCPRulesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "service_id", Type: field.TypeInt64},
		{Name: "port", Type: field.TypeInt, Unique: true},
	}
	// TCPRulesTable holds the schema information for the "tcp_rules" table.
	TCPRulesTable = &schema.Table{
		Name:        "tcp_rules",
		Columns:     TCPRulesColumns,
		PrimaryKey:  []*schema.Column{TCPRulesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// TenantsColumns holds the columns for the "tenants" table.
	TenantsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "app_id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "secret", Type: field.TypeString},
		{Name: "white_ips", Type: field.TypeString},
		{Name: "qpd", Type: field.TypeInt},
		{Name: "qps", Type: field.TypeInt},
		{Name: "create_at", Type: field.TypeTime},
		{Name: "update_at", Type: field.TypeTime},
		{Name: "is_delete", Type: field.TypeInt8, Unique: true},
	}
	// TenantsTable holds the schema information for the "tenants" table.
	TenantsTable = &schema.Table{
		Name:        "tenants",
		Columns:     TenantsColumns,
		PrimaryKey:  []*schema.Column{TenantsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "username", Type: field.TypeString},
		{Name: "salt", Type: field.TypeString},
		{Name: "password", Type: field.TypeString},
		{Name: "update_at", Type: field.TypeTime},
		{Name: "create_at", Type: field.TypeTime},
		{Name: "is_delete", Type: field.TypeInt, Unique: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:        "users",
		Columns:     UsersColumns,
		PrimaryKey:  []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AccessControlsTable,
		GrpcRulesTable,
		HTTPRulesTable,
		LoadBalancesTable,
		ServiceInfosTable,
		TCPRulesTable,
		TenantsTable,
		UsersTable,
	}
)

func init() {
}
